// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SeIOCP.cpp

#include "SeIOCP.cpp.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_SeIOCP_2ecpp = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_SeIOCP_2ecpp = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_SeIOCP_2ecpp = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_SeIOCP_2ecpp::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_SeIOCP_2ecpp[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nSeIOCP.cpp"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_SeIOCP_2ecpp_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_SeIOCP_2ecpp_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_SeIOCP_2ecpp_once;
static bool descriptor_table_SeIOCP_2ecpp_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_SeIOCP_2ecpp = {
  &descriptor_table_SeIOCP_2ecpp_initialized, descriptor_table_protodef_SeIOCP_2ecpp, "SeIOCP.cpp", 12,
  &descriptor_table_SeIOCP_2ecpp_once, descriptor_table_SeIOCP_2ecpp_sccs, descriptor_table_SeIOCP_2ecpp_deps, 0, 0,
  schemas, file_default_instances, TableStruct_SeIOCP_2ecpp::offsets,
  file_level_metadata_SeIOCP_2ecpp, 0, file_level_enum_descriptors_SeIOCP_2ecpp, file_level_service_descriptors_SeIOCP_2ecpp,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_SeIOCP_2ecpp = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_SeIOCP_2ecpp)), true);

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
